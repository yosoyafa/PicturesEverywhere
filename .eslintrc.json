{
  "root": true,
  "extends": [
    "plugin:react/recommended",
    "airbnb",
    "airbnb-typescript",
    "airbnb/hooks",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "react",
    "react-native",
    "@typescript-eslint",
    "simple-import-sort"
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true,
      "tsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module",
    "project": ["./tsconfig.json"]
  },
  "env": {
    "react-native/react-native": true,
    "es2021": true,
    "node": true,
    "jest": true
  },
  "rules": {
    "react-native/no-unused-styles": 2,
    "react-native/split-platform-components": 2,
    "react-native/no-inline-styles": 2,
    "react-native/no-color-literals": 2,
    "react-native/no-raw-text": 2,
    "react-native/no-single-element-style-arrays": 2,
    "react/prop-types": 0,
    "react/jsx-props-no-spreading": 0,
    "import/no-unresolved": [1, {"ignore": ["\\shared/utils$"]}],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never",
        "json": "never",
        "": "never"
      }
    ],
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error"
  },
  "settings": {
    "import/resolver": {
      "babel-module": {"allowExistingDirectories": true}
    }
  },
  "overrides": [
    // override "simple-import-sort" config
    {
      "files": ["*.ts", "*.tsx"],

      "parserOptions": {
        "project": ["./tsconfig.json"] // Specify it only for TypeScript files
      },
      "rules": {
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              // Packages `react` related packages come first.
              ["^react", "^@?\\w"],
              // Internal packages.
              [
                "^(@|components|hooks|lib|navigation|operations|screens|shared)(/.*|$)"
              ],
              // Side effect imports.
              ["^\\u0000"],
              // Parent imports. Put `..` last.
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Other relative imports. Put same-folder imports and `.` last.
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
              // Style imports.
              ["^.+\\.?(css)$"]
            ]
          }
        ]
      }
    }
  ]
}
